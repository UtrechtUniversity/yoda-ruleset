{"openapi": "3.0.0", "info": {"description": "Yoda core ruleset containing iRODS and Python rules and policies useful for all Yoda environments.", "contact": {"email": "l.r.westerhof@uu.nl"}, "version": "1.8.0", "title": "Yoda core API"}, "servers": [{"url": "https://portal.yoda.test/api", "description": "Local Yoda development server"}], "security": [{"cookieAuth": []}, {"basicAuth": []}], "components": {"schemas": {"result_error": {"type": "object", "properties": {"status": {"type": "string", "description": "Holds an error ID"}, "status_info": {"type": "string", "description": "Holds a human-readable error description"}, "data": {"description": "empty", "nullable": true, "type": "object"}}}}, "securitySchemes": {"cookieAuth": {"in": "cookie", "type": "apiKey", "name": "yoda_session"}, "basicAuth": {"type": "http", "scheme": "basic"}}, "responses": {"status_400": {"description": "Bad request", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/result_error"}}}}, "status_500": {"description": "Internal error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/result_error"}}}}}}, "paths": {"/browse_folder": {"post": {"tags": ["browse"], "summary": "Get paginated collection contents, including size/modify date information.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"coll": {"default": "/", "type": "string", "description": "Collection to get paginated contents of"}, "sort_on": {"default": "name", "type": "string", "description": "Column to sort on ('name', 'modified' or size)"}, "sort_order": {"default": "asc", "type": "string", "description": "Column sort order ('asc' or 'desc')"}, "offset": {"default": 0, "type": "string", "description": "Offset to start browsing from"}, "limit": {"default": 10, "type": "string", "description": "Limit number of results"}, "space": {"default": 0, "type": "string", "description": "Space the collection is in"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/browse_collections": {"post": {"tags": ["browse"], "summary": "Get paginated collection contents, including size/modify date information.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"coll": {"default": "/", "type": "string", "description": "Collection to get paginated contents of"}, "sort_on": {"default": "name", "type": "string", "description": "Column to sort on ('name', 'modified' or size)"}, "sort_order": {"default": "asc", "type": "string", "description": "Column sort order ('asc' or 'desc')"}, "offset": {"default": 0, "type": "string", "description": "Offset to start browsing from"}, "limit": {"default": 10, "type": "string", "description": "Limit number of results"}, "space": {"default": 0, "type": "string", "description": "Space the collection is in"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/search": {"post": {"tags": ["browse"], "summary": "Get paginated search results, including size/modify date/location information.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["search_string"], "type": "object", "properties": {"search_string": {"default": null, "type": "string", "description": "String used to search"}, "search_type": {"default": "filename", "type": "string", "description": "Search type ('filename', 'folder', 'metadata', 'status')"}, "sort_on": {"default": "name", "type": "string", "description": "Column to sort on ('name', 'modified' or size)"}, "sort_order": {"default": "asc", "type": "string", "description": "Column sort order ('asc' or 'desc')"}, "offset": {"default": 0, "type": "string", "description": "Offset to start browsing from"}, "limit": {"default": 10, "type": "string", "description": "Limit number of results"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/provenance_log": {"post": {"tags": ["provenance"], "summary": "Return formatted provenance log of a collection.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Path of a collection in research or vault space."}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_data": {"post": {"tags": ["groups"], "summary": "Retrieve group data as hierarchy for user.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_categories": {"post": {"tags": ["groups"], "summary": "Retrieve category list.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_subcategories": {"post": {"tags": ["groups"], "summary": "Retrieve subcategory list.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["category"], "type": "object", "properties": {"category": {"default": null, "type": "string", "description": "Category to retrieve subcategories of"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_search_users": {"post": {"tags": ["groups"], "summary": "(undocumented)", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["pattern"], "type": "object", "properties": {"pattern": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_exists": {"post": {"tags": ["groups"], "summary": "Check if group exists.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["group_name"], "type": "object", "properties": {"group_name": {"default": null, "type": "string", "description": "Name of the group to check for existence"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_create": {"post": {"tags": ["groups"], "summary": "Create a new group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["group_name", "category", "subcategory", "description", "data_classification"], "type": "object", "properties": {"group_name": {"default": null, "type": "string", "description": "Name of the group to create"}, "category": {"default": null, "type": "string", "description": "Category of the group to create"}, "subcategory": {"default": null, "type": "string", "description": "Subcategory of the group to create"}, "description": {"default": null, "type": "string", "description": "Description of the group to create"}, "data_classification": {"default": null, "type": "string", "description": "Data classification of the group to create"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_update": {"post": {"tags": ["groups"], "summary": "Update group property.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["group_name", "property_name", "property_value"], "type": "object", "properties": {"group_name": {"default": null, "type": "string", "description": "Name of the group to update property of"}, "property_name": {"default": null, "type": "string", "description": "Name of the property to update"}, "property_value": {"default": null, "type": "string", "description": "Value of the property to update"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_delete": {"post": {"tags": ["groups"], "summary": "Delete a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["group_name"], "type": "object", "properties": {"group_name": {"default": null, "type": "string", "description": "Name of the group to delete"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_get_description": {"post": {"tags": ["groups"], "summary": "Retrieve description of a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["group_name"], "type": "object", "properties": {"group_name": {"default": null, "type": "string", "description": "Name of the group"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_user_is_member": {"post": {"tags": ["groups"], "summary": "Check if user is member of a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["username", "group_name"], "type": "object", "properties": {"username": {"default": null, "type": "string", "description": "Name of the user"}, "group_name": {"default": null, "type": "string", "description": "Name of the group"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_user_add": {"post": {"tags": ["groups"], "summary": "Add a user to a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["username", "group_name"], "type": "object", "properties": {"username": {"default": null, "type": "string", "description": "Name of the user"}, "group_name": {"default": null, "type": "string", "description": "Name of the group"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_user_update_role": {"post": {"tags": ["groups"], "summary": "Update role of a user in a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["username", "group_name", "new_role"], "type": "object", "properties": {"username": {"default": null, "type": "string", "description": "Name of the user"}, "group_name": {"default": null, "type": "string", "description": "Name of the group"}, "new_role": {"default": null, "type": "string", "description": "New role of the user"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_get_user_role": {"post": {"tags": ["groups"], "summary": "Get role of a user in a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["username", "group_name"], "type": "object", "properties": {"username": {"default": null, "type": "string", "description": "Name of the user"}, "group_name": {"default": null, "type": "string", "description": "Name of the group"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/group_remove_user_from_group": {"post": {"tags": ["groups"], "summary": "Remove a user from a group.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["username", "group_name"], "type": "object", "properties": {"username": {"default": null, "type": "string", "description": "Name of the user"}, "group_name": {"default": null, "type": "string", "description": "Name of the group"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/transform_metadata": {"post": {"tags": ["schema_transformation"], "summary": "Transform a yoda-metadata file in the given collection to the active schema.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/meta_form_load": {"post": {"tags": ["meta_form"], "summary": "Retrieve all information required to load a metadata form in either the research or vault space.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection to retrieve all information required to load a metadata form from"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/meta_form_save": {"post": {"tags": ["meta_form"], "summary": "Validate and store JSON metadata for a given collection.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll", "metadata"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection to save metadata on"}, "metadata": {"default": null, "type": "string", "description": "Metadata to save"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/settings_load": {"post": {"tags": ["settings"], "summary": "Load user settings.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/settings_save": {"post": {"tags": ["settings"], "summary": "Save user settings.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["settings"], "type": "object", "properties": {"settings": {"default": null, "type": "string", "description": "Dict with settings to be saved"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/notifications_load": {"post": {"tags": ["notifications"], "summary": "Load user notifications.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {"sort_order": {"default": "desc", "type": "string", "description": "Sort order of notifications on timestamp (\"asc\" or \"desc\", default \"desc\")"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/notifications_dismiss": {"post": {"tags": ["notifications"], "summary": "Dismiss user notification.\n    ", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["identifier"], "type": "object", "properties": {"identifier": {"default": null, "type": "string", "description": "Identifier of notification message"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/notifications_dismiss_all": {"post": {"tags": ["notifications"], "summary": "Dismiss all user notifications.\n    ", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_submit": {"post": {"tags": ["vault"], "summary": "Submit data package for publication.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to submit"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_approve": {"post": {"tags": ["vault"], "summary": "Approve data package for publication.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to approve"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_cancel": {"post": {"tags": ["vault"], "summary": "Cancel submit of data package.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to cancel submit"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_depublish": {"post": {"tags": ["vault"], "summary": "Depublish data package.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to depublish"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_republish": {"post": {"tags": ["vault"], "summary": "Republish data package.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to republish"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_copy_to_research": {"post": {"tags": ["vault"], "summary": "Copy data package from vault to research space.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll_origin", "coll_target"], "type": "object", "properties": {"coll_origin": {"default": null, "type": "string", "description": "Collection of data package to copy"}, "coll_target": {"default": null, "type": "string", "description": "Collection to copy data package to"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_preservable_formats_lists": {"post": {"tags": ["vault"], "summary": "Retrieve lists of preservable file formats on the system.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_unpreservable_files": {"post": {"tags": ["vault"], "summary": "Retrieve the set of unpreservable file formats in a collection.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll", "list_name"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of folder to check"}, "list_name": {"default": null, "type": "string", "description": "Name of preservable file format list"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_system_metadata": {"post": {"tags": ["vault"], "summary": "Return collection statistics as JSON.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_collection_details": {"post": {"tags": ["vault"], "summary": "Return details of a vault collection.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["path"], "type": "object", "properties": {"path": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_get_package_by_reference": {"post": {"tags": ["vault"], "summary": "Return path to data package with provided reference (UUID4).\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["reference"], "type": "object", "properties": {"reference": {"default": null, "type": "string", "description": "Data Package Reference (UUID4)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_get_landingpage_data": {"post": {"tags": ["vault"], "summary": "Retrieve landingpage data of data package.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection to retrieve landingpage data from"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/vault_get_publication_terms": {"post": {"tags": ["vault"], "summary": "Retrieve the publication terms.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/grant_read_access_research_group": {"post": {"tags": ["vault"], "summary": "Grant read rights of research group for datapackage in vault.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to remove read rights from"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/revoke_read_access_research_group": {"post": {"tags": ["vault"], "summary": "Revoke read rights of research group for datapackage in vault.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection of data package to remove read rights from"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/meta_remove": {"post": {"tags": ["meta"], "summary": "Remove a collection's metadata JSON, if it exist.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/meta_clone_file": {"post": {"tags": ["meta"], "summary": "Clone a metadata file from a parent collection to a subcollection.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["target_coll"], "type": "object", "properties": {"target_coll": {"default": null, "type": "string", "description": "Target collection (where the metadata is copied to)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_lock": {"post": {"tags": ["folder"], "summary": "Lock a folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Folder to lock"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_unlock": {"post": {"tags": ["folder"], "summary": "Unlock a folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Folder to unlock"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_submit": {"post": {"tags": ["folder"], "summary": "Submit a folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Folder to submit"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_unsubmit": {"post": {"tags": ["folder"], "summary": "Unsubmit a folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Folder to unsubmit"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_accept": {"post": {"tags": ["folder"], "summary": "Accept a folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Folder to accept"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_reject": {"post": {"tags": ["folder"], "summary": "Reject a folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Folder to reject"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/folder_get_locks": {"post": {"tags": ["folder"], "summary": "Return a list of locks on a collection.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_folder_add": {"post": {"tags": ["research"], "summary": "Add a new folder to a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll", "new_folder_name"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Collection to create new folder in"}, "new_folder_name": {"default": null, "type": "string", "description": "Name of the new folder"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_folder_copy": {"post": {"tags": ["research"], "summary": "Copy a folder in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["folder_path", "new_folder_path"], "type": "object", "properties": {"folder_path": {"default": null, "type": "string", "description": "Path to the folder to copy"}, "new_folder_path": {"default": null, "type": "string", "description": "Path to the new copy of the folder"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_folder_move": {"post": {"tags": ["research"], "summary": "Move a folder in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["folder_path", "new_folder_path"], "type": "object", "properties": {"folder_path": {"default": null, "type": "string", "description": "Path to the folder to move"}, "new_folder_path": {"default": null, "type": "string", "description": "Path to the new folder"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_folder_rename": {"post": {"tags": ["research"], "summary": "Rename an existing research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["new_folder_name", "coll", "org_folder_name"], "type": "object", "properties": {"new_folder_name": {"default": null, "type": "string", "description": "New folder name"}, "coll": {"default": null, "type": "string", "description": "Parent collection of folder"}, "org_folder_name": {"default": null, "type": "string", "description": "Current name of the folder"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_folder_delete": {"post": {"tags": ["research"], "summary": "Delete a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll", "folder_name"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Parent collection of folder to delete"}, "folder_name": {"default": null, "type": "string", "description": "Name of folder to delete"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_list_temporary_files": {"post": {"tags": ["research"], "summary": "Get list of temporary files to be cleaned up.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Parent collection of folder to delete"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_file_copy": {"post": {"tags": ["research"], "summary": "Copy a file in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["filepath", "new_filepath"], "type": "object", "properties": {"filepath": {"default": null, "type": "string", "description": "Path to the file to copy"}, "new_filepath": {"default": null, "type": "string", "description": "Path to the new copy of the file"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_file_rename": {"post": {"tags": ["research"], "summary": "Rename a file in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["new_file_name", "coll", "org_file_name"], "type": "object", "properties": {"new_file_name": {"default": null, "type": "string", "description": "New file name"}, "coll": {"default": null, "type": "string", "description": "Parent collection of file"}, "org_file_name": {"default": null, "type": "string", "description": "Current name of the file"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_file_move": {"post": {"tags": ["research"], "summary": "Move a file in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["filepath", "new_filepath"], "type": "object", "properties": {"filepath": {"default": null, "type": "string", "description": "Path to the file to move"}, "new_filepath": {"default": null, "type": "string", "description": "Path to the new location of the file"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_file_delete": {"post": {"tags": ["research"], "summary": "Delete a file in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll", "file_name"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Parent collection of file to delete"}, "file_name": {"default": null, "type": "string", "description": "Name of file to delete"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_system_metadata": {"post": {"tags": ["research"], "summary": "Return collection statistics as JSON.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Research collection"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_collection_details": {"post": {"tags": ["research"], "summary": "Return details of a research collection.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["path"], "type": "object", "properties": {"path": {"default": null, "type": "string", "description": "(undocumented)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/research_manifest": {"post": {"tags": ["research"], "summary": "Produce a manifest of data objects in a collection\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["coll"], "type": "object", "properties": {"coll": {"default": null, "type": "string", "description": "Parent collection of data objects to include"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_save_tier": {"post": {"tags": ["resources"], "summary": "Save tier for given resource as metadata.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["resource_name", "tier_name"], "type": "object", "properties": {"resource_name": {"default": null, "type": "string", "description": "Resource that the tier is equipped with"}, "tier_name": {"default": null, "type": "string", "description": "Name of the tier that is given to the resource"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_full_year_group_data": {"post": {"tags": ["resources"], "summary": "Get a full year of monthly storage data starting from current month and look back one year.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["group_name"], "type": "object", "properties": {"group_name": {"default": null, "type": "string", "description": "Group that is searched for storage data"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_list_groups": {"post": {"tags": ["resources"], "summary": "Get the groups (research and deposit) a user is member or datamanager of.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_get_tiers": {"post": {"tags": ["resources"], "summary": "As rodsadmin get all tiers present.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_tier": {"post": {"tags": ["resources"], "summary": "Get the tier belonging to the given resource.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["res_name"], "type": "object", "properties": {"res_name": {"default": null, "type": "string", "description": "Resource that the tier is equipped with"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_resource_and_tier_data": {"post": {"tags": ["resources"], "summary": "List al resources and its tier data.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_category_stats": {"post": {"tags": ["resources"], "summary": "Collect storage stats of last month for categories.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/resource_monthly_category_stats": {"post": {"tags": ["resources"], "summary": "Collect storage stats for all twelve months based upon categories a user is datamanager of.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "object", "properties": {}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/revisions_search_on_filename": {"post": {"tags": ["revisions"], "summary": "Search revisions of a file in a research folder and return list of corresponding revisions.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["searchString"], "type": "object", "properties": {"searchString": {"default": null, "type": "string", "description": "String to search for as part of a file name"}, "offset": {"default": 0, "type": "string", "description": "Starting point in total resultset to start fetching"}, "limit": {"default": 10, "type": "string", "description": "Max size of the resultset to be returned"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/revisions_list": {"post": {"tags": ["revisions"], "summary": "Get list revisions of a file in a research folder.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["path"], "type": "object", "properties": {"path": {"default": null, "type": "string", "description": "Path to data object to find revisions for"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}, "/revisions_restore": {"post": {"tags": ["revisions"], "summary": "Copy selected revision to target collection with given name.\n", "requestBody": {"required": true, "content": {"application/json": {"schema": {"required": ["revision_id", "overwrite", "coll_target", "new_filename"], "type": "object", "properties": {"revision_id": {"default": null, "type": "string", "description": "Data id of the revision to be restored"}, "overwrite": {"default": null, "type": "string", "description": "Overwrite indication from front end {restore_no_overwrite, restore_overwrite, restore_next_to}"}, "coll_target": {"default": null, "type": "string", "description": "Target collection to place the file"}, "new_filename": {"default": null, "type": "string", "description": "New file name as entered by user (in case of duplicate)"}}}}}}, "responses": {"200": {"description": "Success", "content": {"application/json": {"schema": {"type": "object", "properties": {"status": {"type": "string"}, "status_info": {"type": "string", "nullable": true}, "data": {"nullable": true}}}}}}, "400": {"$ref": "#/components/responses/status_400"}, "500": {"$ref": "#/components/responses/status_500"}}}}}}

name: API

on:
  push:
    branches:
    - development
    paths-ignore:
    - 'avu_json/**'
    - 'file_formats/**'
    - 'licenses/**'
    - 'schemas/**'
    - 'templates/**'
    - 'terms/**'
    - 'tests/**'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [2.7]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install openapi-spec-validator
          python -m pip install -r requirements.txt

      - name: Prepare for API documentation generation
        run: |
          mkdir build
          export PYTHONPATH="${PYTHONPATH}:."
          ln -s . rules_uu

      - name: Generate Yoda core API documentation
        run: |
          python tools/api/generate-openapi.py rules_uu --core > build/api_core.json

      - name: Validate Yoda core API documentation
        run: |
          openapi-spec-validator build/api_core.json

      - name: Generate Yoda module API documentation
        run: |
          python tools/api/generate-openapi.py rules_uu --module intake > build/api_intake.json
          python tools/api/generate-openapi.py rules_uu --module intake > build/api_datarequest.json

      - name: Validate Yoda module API documentation
        run: |
          openapi-spec-validator build/api_intake.json
          openapi-spec-validator build/api_datarequest.json

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages
          folder: build
